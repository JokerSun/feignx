package feign.assertions;

import feign.http.HttpRequest;

/**
 * {@link HttpRequest} specific assertions - Generated by CustomAssertionGenerator.
 *
 * Although this class is not final to allow Soft assertions proxy, if you wish to extend it, 
 * extend {@link AbstractHttpRequestAssert} instead.
 */
@javax.annotation.Generated(value="assertj-assertions-generator")
public class HttpRequestAssert extends AbstractHttpRequestAssert<HttpRequestAssert, HttpRequest> {

  /**
   * Creates a new <code>{@link HttpRequestAssert}</code> to make assertions on actual HttpRequest.
   * @param actual the HttpRequest we want to make assertions on.
   */
  public HttpRequestAssert(HttpRequest actual) {
    super(actual, HttpRequestAssert.class);
  }

  /**
   * An entry point for HttpRequestAssert to follow AssertJ standard <code>assertThat()</code> statements.<br>
   * With a static import, one can write directly: <code>assertThat(myHttpRequest)</code> and get specific assertion with code completion.
   * @param actual the HttpRequest we want to make assertions on.
   * @return a new <code>{@link HttpRequestAssert}</code>
   */
  @org.assertj.core.util.CheckReturnValue
  public static HttpRequestAssert assertThat(HttpRequest actual) {
    return new HttpRequestAssert(actual);
  }
}
